package JavaCC;

/* Generated By:JavaCC: Do not edit this line. perlConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface perlConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int pbreak = 7;
  /** RegularExpression Id. */
  int pcontinue = 8;
  /** RegularExpression Id. */
  int pdefault = 9;
  /** RegularExpression Id. */
  int pdelete = 10;
  /** RegularExpression Id. */
  int pdo = 11;
  /** RegularExpression Id. */
  int pelse = 12;
  /** RegularExpression Id. */
  int pelsif = 13;
  /** RegularExpression Id. */
  int pfor = 14;
  /** RegularExpression Id. */
  int pforeach = 15;
  /** RegularExpression Id. */
  int pgiven = 16;
  /** RegularExpression Id. */
  int pif = 17;
  /** RegularExpression Id. */
  int pmy = 18;
  /** RegularExpression Id. */
  int pour = 19;
  /** RegularExpression Id. */
  int pprint = 20;
  /** RegularExpression Id. */
  int preturn = 21;
  /** RegularExpression Id. */
  int pstdin = 22;
  /** RegularExpression Id. */
  int puse = 23;
  /** RegularExpression Id. */
  int punless = 24;
  /** RegularExpression Id. */
  int puntil = 25;
  /** RegularExpression Id. */
  int pwhen = 26;
  /** RegularExpression Id. */
  int pwhile = 27;
  /** RegularExpression Id. */
  int parenizq = 28;
  /** RegularExpression Id. */
  int parender = 29;
  /** RegularExpression Id. */
  int llaveizq = 30;
  /** RegularExpression Id. */
  int llaveder = 31;
  /** RegularExpression Id. */
  int corizq = 32;
  /** RegularExpression Id. */
  int corder = 33;
  /** RegularExpression Id. */
  int puncoma = 34;
  /** RegularExpression Id. */
  int dospuntos = 35;
  /** RegularExpression Id. */
  int coma = 36;
  /** RegularExpression Id. */
  int punto = 37;
  /** RegularExpression Id. */
  int comdobles = 38;
  /** RegularExpression Id. */
  int comsimple = 39;
  /** RegularExpression Id. */
  int comentario = 40;
  /** RegularExpression Id. */
  int asigna = 41;
  /** RegularExpression Id. */
  int mayor = 42;
  /** RegularExpression Id. */
  int menor = 43;
  /** RegularExpression Id. */
  int menigual = 44;
  /** RegularExpression Id. */
  int mayigual = 45;
  /** RegularExpression Id. */
  int menorcad = 46;
  /** RegularExpression Id. */
  int mayorcad = 47;
  /** RegularExpression Id. */
  int menigualcad = 48;
  /** RegularExpression Id. */
  int mayigualcad = 49;
  /** RegularExpression Id. */
  int igual = 50;
  /** RegularExpression Id. */
  int dif = 51;
  /** RegularExpression Id. */
  int igualcad = 52;
  /** RegularExpression Id. */
  int difcad = 53;
  /** RegularExpression Id. */
  int suma = 54;
  /** RegularExpression Id. */
  int resta = 55;
  /** RegularExpression Id. */
  int div = 56;
  /** RegularExpression Id. */
  int cambioizq = 57;
  /** RegularExpression Id. */
  int cambioder = 58;
  /** RegularExpression Id. */
  int producto = 59;
  /** RegularExpression Id. */
  int residuo = 60;
  /** RegularExpression Id. */
  int exp = 61;
  /** RegularExpression Id. */
  int inc = 62;
  /** RegularExpression Id. */
  int dec = 63;
  /** RegularExpression Id. */
  int nobin = 64;
  /** RegularExpression Id. */
  int nolog = 65;
  /** RegularExpression Id. */
  int not = 66;
  /** RegularExpression Id. */
  int ybin = 67;
  /** RegularExpression Id. */
  int obin = 68;
  /** RegularExpression Id. */
  int xor = 69;
  /** RegularExpression Id. */
  int ylog = 70;
  /** RegularExpression Id. */
  int olog = 71;
  /** RegularExpression Id. */
  int odeflog = 72;
  /** RegularExpression Id. */
  int and = 73;
  /** RegularExpression Id. */
  int or = 74;
  /** RegularExpression Id. */
  int sumasigna = 75;
  /** RegularExpression Id. */
  int restasigna = 76;
  /** RegularExpression Id. */
  int prodasigna = 77;
  /** RegularExpression Id. */
  int divasigna = 78;
  /** RegularExpression Id. */
  int resasigna = 79;
  /** RegularExpression Id. */
  int yasigna = 80;
  /** RegularExpression Id. */
  int oasigna = 81;
  /** RegularExpression Id. */
  int xorasigna = 82;
  /** RegularExpression Id. */
  int camizqasig = 83;
  /** RegularExpression Id. */
  int camderasig = 84;
  /** RegularExpression Id. */
  int entero = 85;
  /** RegularExpression Id. */
  int real = 86;
  /** RegularExpression Id. */
  int ident = 87;
  /** RegularExpression Id. */
  int cadenainter = 88;
  /** RegularExpression Id. */
  int cadena = 89;
  /** RegularExpression Id. */
  int c_noval = 90;
  /** RegularExpression Id. */
  int cad_noval = 91;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 6>",
    "<pbreak>",
    "<pcontinue>",
    "<pdefault>",
    "<pdelete>",
    "<pdo>",
    "<pelse>",
    "<pelsif>",
    "<pfor>",
    "<pforeach>",
    "<pgiven>",
    "<pif>",
    "<pmy>",
    "<pour>",
    "<pprint>",
    "<preturn>",
    "<pstdin>",
    "<puse>",
    "<punless>",
    "<puntil>",
    "<pwhen>",
    "<pwhile>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\".\"",
    "\"\\\"\"",
    "\"\\\'\"",
    "\"#\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\"lt\"",
    "\"gt\"",
    "\"le\"",
    "\"ge\"",
    "\"==\"",
    "\"!=\"",
    "\"eq\"",
    "\"ne\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"<<\"",
    "\">>\"",
    "\"*\"",
    "\"%\"",
    "\"**\"",
    "\"++\"",
    "\"--\"",
    "\"~\"",
    "\"!\"",
    "\"not\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"&&\"",
    "\"||\"",
    "\"//\"",
    "\"and\"",
    "\"or\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"<<=\"",
    "\">>=\"",
    "<entero>",
    "<real>",
    "<ident>",
    "<cadenainter>",
    "<cadena>",
    "<c_noval>",
    "<cad_noval>",
  };

}
